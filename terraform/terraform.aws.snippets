snippet aws_vpc "aws_vpc"
resource "aws_vpc" "${1:}" {
  cidr_block = "${2:10.0.0.0/16}"
  enable_dns_hostnames = "${3:true}"
}
endsnippet

snippet aws_internet_gateway "aws_internet_gateway"
resource "aws_internet_gateway" "${1:}" {
  vpc_id = "${aws_vpc.${2:name}.id}"
}
endsnippet

snippet aws_route "aws_route"
resource "aws_route" "${1:}" {
  route_table_id         = "${aws_vpc.${2:name}.main_route_table_id}"
  destination_cidr_block = "${3:0.0.0.0/0}"
  gateway_id             = "${aws_internet_gateway.${4:name}.id}}"
}
endsnippet

snippet aws_subnet "aws_subnet"
resource "aws_subnet" "${1:}" {
  vpc_id                  = "${aws_vpc.${2:name}.id}"
  cidr_block              = "${3:10.0.1.0/24}"
  map_public_ip_on_launch = ${4:true}
}
endsnippet

snippet aws_security_group "aws_security_group"
resource "aws_security_group" "${1:}" {
  name        = "${2:name}"
  vpc_id      = "${aws_vpc.${2:name}.id}"
  description = "Used in the terraform"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
endsnippet

snippet aws_instance "aws_instance"
resource "aws_instance" "${1:}" {
  subnet_id              = "${var.subnet_id}"
  ami                    = "${data.aws_ami.common.id}"
  instance_type          = "t2.micro"
  vpc_security_group_ids = ["${aws_security_group.${4:name}.id}"]
  key_name               = "${aws_key_pair.root_key.key_name}"
}
endsnippet

snippet aws_eip "aws_eip"
resource "aws_eip" "web" {
  instance = "${aws_instance.web.id}"
  vpc      = true
}
endsnippet

snippet aws_route53_zone "aws_route53_zone"
resource "aws_route53_zone" "main" {
  name = "example.com"
  vpc_id = "${var.vpc_id}"

  tags {
    environment = "${var.environment}"
  }
}
endsnippet

snippet aws_route53_record "aws_route53_record"
resource "aws_route53_record" "www" {
  zone_id = "${aws_route53_zone.primary.zone_id}"
  name    = "example.com"
  ttl     = "5"

  # Chose one of the records below

  # Normal A record
  type    = "A"
  records = ["${aws_eip.instance.public_ip}"]

  # CNAME records
  type    = "CNAME"
  records = ["live.example.com"]

  # Alias record
  type    = "A"

  alias {
    name                   = "${aws_elb.main.dns_name}"
    zone_id                = "${aws_elb.main.zone_id}"
    evaluate_target_health = true
  }
}
endsnippet

snippet aws_volume_attachment "aws_volume_attachment"
resource "aws_volume_attachment" "ebs_att" {
  device_name  = "/dev/sdf"
  volume_id    = "${aws_ebs_volume.example.id}"
  instance_id  = "${aws_instance.web.id}"
  force_detach = true
}
endsnippet
