snippet const "const c = val"
const ${1:} = ${2:};
endsnippet

snippet switch "switch (expression) {}"
switch(${1:expression}) {
  case ${2:value}:
    // code block
    break;
  case ${3:value}:
    // code block
    break;
}
endsnippet

snippet if "if () {}"
if (${1:}) {
  ${2:}
}
endsnippet

snippet afn "anonymous function"
function(${1:}) {
  ${2:}
}
endsnippet

snippet function "named function"
function ${1:}(${2:}) {
  ${3:}
}
endsnippet

snippet console.log('var',var) "console.log(str, str)"
console.log('${1}', $1);
endsnippet

snippet console.log(var) "console.log(str)"
console.log(${1});
endsnippet

snippet console.trace(err) "console.trace(err)"
console.trace(${1});
endsnippet

snippet console.log('--------') "console.log(----------)"
console.log('----------');
endsnippet

snippet JSON.stringify() "Pretty JSON stringify"
JSON.stringify(${1}, null, 2)
endsnippet

snippet console.log('msg',JSON.stringify()) "console.log pretty JSON"
console.log('${1}', JSON.stringify($1, null, 2));
endsnippet

snippet console.dir('msg',msg)
console.dir(${1:});
endsnippet

snippet JSON.parse(JSON.stringify()) "Deep clone JSON object"
JSON.parse(JSON.stringify(${1}))
endsnippet

snippet try "try/catch"
try {
  // block...
} catch (e) {
  // handle error...
}
endsnippet
